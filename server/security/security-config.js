const rateLimit = require('express-rate-limit');
const slowDown = require('express-slow-down');
const validator = require('validator');
const xss = require('xss');
const hpp = require('hpp');
const mongoSanitize = require('express-mongo-sanitize');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
const securityConfig = {
  // Rate limiting –¥–ª—è API
  apiRateLimit: rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP –∑–∞ 15 –º–∏–Ω—É—Ç
    message: {
      error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –≤–∞—à–µ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skip: (req) => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º rate limiting –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö IP
      const ip = req.ip || req.connection.remoteAddress;
      return ip === '127.0.0.1' || ip === '::1' || ip.startsWith('192.168.') || ip.startsWith('10.');
    }
  }),

  // –°—Ç—Ä–æ–≥–∏–π rate limiting –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  authRateLimit: rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 5, // –º–∞–∫—Å–∏–º—É–º 5 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ –∑–∞ 15 –º–∏–Ω—É—Ç
    message: {
      error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skipSuccessfulRequests: true
  }),

  // –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
  speedLimiter: slowDown({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    delayAfter: 50, // –∑–∞–º–µ–¥–ª—è—Ç—å –ø–æ—Å–ª–µ 50 –∑–∞–ø—Ä–æ—Å–æ–≤
    delayMs: () => 500, // –¥–æ–±–∞–≤–ª—è—Ç—å 500–º—Å –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç v2)
    validate: { delayMs: false } // –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–∏–≥—Ä–∞—Ü–∏–∏
  }),

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Helmet –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  helmetConfig: {
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ["'self'"],
        styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
        fontSrc: ["'self'", "https://fonts.gstatic.com"],
        imgSrc: ["'self'", "data:", "https:"],
        scriptSrc: ["'self'"],
        connectSrc: ["'self'", "ws:", "wss:"],
        objectSrc: ["'none'"],
        mediaSrc: ["'self'"],
        frameSrc: ["'none'"]
      }
    },
    crossOriginEmbedderPolicy: false,
    hsts: {
      maxAge: 31536000,
      includeSubDomains: true,
      preload: true
    }
  },

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  sanitizeInput: (data) => {
    if (typeof data === 'string') {
      // –£–¥–∞–ª—è–µ–º XSS
      data = xss(data, {
        whiteList: {}, // –ù–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –Ω–∏–∫–∞–∫–∏—Ö HTML —Ç–µ–≥–æ–≤
        stripIgnoreTag: true,
        stripIgnoreTagBody: ['script']
      });
      
      // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML
      data = validator.escape(data);
    }
    
    if (typeof data === 'object' && data !== null) {
      for (const key in data) {
        if (data.hasOwnProperty(key)) {
          data[key] = securityConfig.sanitizeInput(data[key]);
        }
      }
    }
    
    return data;
  },

  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  validateEmail: (email) => {
    return validator.isEmail(email) && validator.isLength(email, { max: 254 });
  },

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
  validatePassword: (password) => {
    return validator.isLength(password, { min: 8, max: 128 }) &&
           /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/.test(password);
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ SQL –∏–Ω—ä–µ–∫—Ü–∏–∏
  detectSQLInjection: (input) => {
    const sqlPatterns = [
      /('|(\-\-)|(;)|(\||\|)|(\*|\*))/i,
      /(union|select|insert|delete|update|drop|create|alter|exec|execute)/i,
      /(script|javascript|vbscript|onload|onerror|onclick)/i
    ];
    
    return sqlPatterns.some(pattern => pattern.test(input));
  },

  // Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç NoSQL –∏–Ω—ä–µ–∫—Ü–∏–π
  noSQLSanitize: mongoSanitize({
    replaceWith: '_'
  }),

  // –ó–∞—â–∏—Ç–∞ –æ—Ç HTTP Parameter Pollution
  hppProtection: hpp({
    whitelist: ['tags', 'categories'] // —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  }),

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS origin
  validateOrigin: (origin) => {
    if (!origin) return true; // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ origin
    
    const allowedOrigins = [
      'http://localhost:5173',
      'http://localhost:8080',
      'https://localhost:8080',
      'http://127.0.0.1:5173',
      'http://127.0.0.1:8080',
      'https://127.0.0.1:8080'
    ];
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º localhost –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ IP
    if (origin.includes('localhost') || origin.includes('127.0.0.1')) {
      return true;
    }
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º IP-–∞–¥—Ä–µ—Å–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
    if (origin.match(/^https?:\/\/(192\.168\.|10\.)/)) {
      return true;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö origins
    return allowedOrigins.includes(origin) || 
           (process.env.FRONTEND_URL && origin === process.env.FRONTEND_URL);
  },

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  logSuspiciousActivity: (req, type, details) => {
    const logEntry = {
      timestamp: new Date().toISOString(),
      type: type,
      ip: req.ip || req.connection.remoteAddress,
      userAgent: req.get('User-Agent'),
      url: req.originalUrl,
      method: req.method,
      details: details
    };
    
    console.warn('üö® –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨:', JSON.stringify(logEntry, null, 2));
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    // –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤
  }
};

module.exports = securityConfig;